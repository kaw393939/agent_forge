apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
      - name: traefik
        image: traefik:v2.10
        args:
        - "--api.insecure=true"
        - "--providers.kubernetesingress=true"
        - "--providers.kubernetesingress.ingressclass=traefik"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: websecure
        - containerPort: 8080
          name: dashboard
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
spec:
  selector:
    app: traefik
  ports:
  - port: 80
    name: web
    targetPort: web
  - port: 443
    name: websecure
    targetPort: websecure
  - port: 8080
    name: dashboard
    targetPort: dashboard
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - traefik.mywebclass.org
    secretName: traefik-tls
  rules:
  - host: traefik.mywebclass.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik
            port:
              number: 8080
